{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red202\green202\blue202;\red183\green111\blue179;\red23\green23\blue23;
\red194\green126\blue101;\red140\green211\blue254;\red70\green137\blue204;\red67\green192\blue160;\red89\green138\blue67;
\red212\green214\blue154;\red66\green179\blue255;\red167\green197\blue152;}
{\*\expandedcolortbl;;\cssrgb\c83137\c83137\c83137;\cssrgb\c77255\c52549\c75294;\cssrgb\c11765\c11765\c11765;
\cssrgb\c80784\c56863\c47059;\cssrgb\c61176\c86275\c99608;\cssrgb\c33725\c61176\c83922;\cssrgb\c30588\c78824\c69020;\cssrgb\c41569\c60000\c33333;
\cssrgb\c86275\c86275\c66667;\cssrgb\c30980\c75686\c100000;\cssrgb\c70980\c80784\c65882;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf3 \cb4 \strokec3 import\cf2 \strokec2  \cf5 \strokec5 "@babylonjs/core/Debug/debugLayer"\cf2 \strokec2 ;\cb1 \
\cf3 \cb4 \strokec3 import\cf2 \strokec2  \cf5 \strokec5 "@babylonjs/inspector"\cf2 \strokec2 ;\cb1 \
\cf3 \cb4 \strokec3 import\cf2 \strokec2  \cf5 \strokec5 "@babylonjs/loaders/glTF"\cf2 \strokec2 ;\cb1 \
\cf3 \cb4 \strokec3 import\cf2 \strokec2  \{ \cf6 \strokec6 Engine\cf2 \strokec2 , \cf6 \strokec6 Scene\cf2 \strokec2 , \cf6 \strokec6 ArcRotateCamera\cf2 \strokec2 , \cf6 \strokec6 Vector3\cf2 \strokec2 , \cf6 \strokec6 HemisphericLight\cf2 \strokec2 , \cf6 \strokec6 Mesh\cf2 \strokec2 , \cf6 \strokec6 MeshBuilder\cf2 \strokec2 , \cf6 \strokec6 UniversalCamera\cf2 \strokec2 , \cf6 \strokec6 StandardMaterial\cf2 \strokec2 , \cf6 \strokec6 Color3\cf2 \strokec2 , \cf6 \strokec6 Animation\cf2 \strokec2 , \cf6 \strokec6 ActionManager\cf2 \strokec2 , \cf6 \strokec6 PlayAnimationAction\cf2 \strokec2 , \cf6 \strokec6 StopAnimationAction\cf2 \strokec2 , \cf6 \strokec6 SetValueAction\cf2 \strokec2 , \cf6 \strokec6 ExecuteCodeAction\cf2 \strokec2 , \cf6 \strokec6 SpotLight\cf2 \strokec2 , \cf6 \strokec6 PointLight\cf2 \strokec2 , \cf6 \strokec6 Material\cf2 \strokec2 , \cf6 \strokec6 AnimationKeyInterpolation\cf2 \strokec2 , \cf6 \strokec6 Texture\cf2 \strokec2 , \cf6 \strokec6 DynamicTexture\cf2 \strokec2 , \cf6 \strokec6 PredicateCondition\cf2 \strokec2  \} \cf3 \strokec3 from\cf2 \strokec2  \cf5 \strokec5 "@babylonjs/core"\cf2 \strokec2 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb4 \strokec7 class\cf2 \strokec2  \cf8 \strokec8 App\cf2 \strokec2  \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4     \cf7 \strokec7 constructor\cf2 \strokec2 () \{\cb1 \
\cb4         \cf9 \strokec9 // create the canvas html element and attach it to the webpage\cf2 \cb1 \strokec2 \
\cb4         \cf7 \strokec7 var\cf2 \strokec2  \cf6 \strokec6 canvas\cf2 \strokec2  = \cf6 \strokec6 document\cf2 \strokec2 .\cf10 \strokec10 createElement\cf2 \strokec2 (\cf5 \strokec5 "canvas"\cf2 \strokec2 );\cb1 \
\cb4         \cf6 \strokec6 canvas\cf2 \strokec2 .\cf11 \strokec11 style\cf2 \strokec2 .\cf6 \strokec6 width\cf2 \strokec2  = \cf5 \strokec5 "100%"\cf2 \strokec2 ;\cb1 \
\cb4         \cf6 \strokec6 canvas\cf2 \strokec2 .\cf11 \strokec11 style\cf2 \strokec2 .\cf6 \strokec6 height\cf2 \strokec2  = \cf5 \strokec5 "100%"\cf2 \strokec2 ;\cb1 \
\cb4         \cf6 \strokec6 canvas\cf2 \strokec2 .\cf6 \strokec6 id\cf2 \strokec2  = \cf5 \strokec5 "gameCanvas"\cf2 \strokec2 ;\cb1 \
\cb4         \cf6 \strokec6 document\cf2 \strokec2 .\cf6 \strokec6 body\cf2 \strokec2 .\cf10 \strokec10 appendChild\cf2 \strokec2 (\cf6 \strokec6 canvas\cf2 \strokec2 );\cb1 \
\
\cb4         \cf9 \strokec9 // initialize babylon scene and engine\cf2 \cb1 \strokec2 \
\cb4         \cf7 \strokec7 var\cf2 \strokec2  \cf6 \strokec6 engine\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 Engine\cf2 \strokec2 (\cf6 \strokec6 canvas\cf2 \strokec2 , \cf7 \strokec7 true\cf2 \strokec2 );\cb1 \
\cb4         \cf7 \strokec7 var\cf2 \strokec2  \cf6 \strokec6 scene\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 Scene\cf2 \strokec2 (\cf6 \strokec6 engine\cf2 \strokec2 );\cb1 \
\
\cb4         \cf9 \strokec9 // initialize babylon camera and light \cf2 \cb1 \strokec2 \
\cb4         \cf7 \strokec7 var\cf2 \strokec2  \cf6 \strokec6 camera\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 UniversalCamera\cf2 \strokec2 (\cf5 \strokec5 "camera1"\cf2 \strokec2 , \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 Vector3\cf2 \strokec2 (\cf12 \strokec12 0\cf2 \strokec2 , \cf12 \strokec12 0\cf2 \strokec2 , -\cf12 \strokec12 10\cf2 \strokec2 ), \cf6 \strokec6 scene\cf2 \strokec2 );\cb1 \
\cb4         \cf6 \strokec6 camera\cf2 \strokec2 .\cf10 \strokec10 attachControl\cf2 \strokec2 (\cf6 \strokec6 canvas\cf2 \strokec2 , \cf7 \strokec7 true\cf2 \strokec2 );\cb1 \
\cb4         \cf7 \strokec7 var\cf2 \strokec2  \cf6 \strokec6 light\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 HemisphericLight\cf2 \strokec2 (\cf5 \strokec5 "omni"\cf2 \strokec2 , \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 Vector3\cf2 \strokec2 (\cf12 \strokec12 5\cf2 \strokec2 , \cf12 \strokec12 5\cf2 \strokec2 , \cf12 \strokec12 0\cf2 \strokec2 ), \cf6 \strokec6 scene\cf2 \strokec2 );\cb1 \
\cb4         \cf6 \strokec6 light\cf2 \strokec2 .\cf6 \strokec6 intensity\cf2 \strokec2  = \cf12 \strokec12 3\cf2 \strokec2 ;\cb1 \
\
\cb4         \cb1 \
\cb4         \cf9 \strokec9 // create play button and set location\cf2 \cb1 \strokec2 \
\cb4         \cf7 \strokec7 var\cf2 \strokec2  \cf6 \strokec6 playDisc\cf2 \strokec2  = \cf8 \strokec8 Mesh\cf2 \strokec2 .\cf10 \strokec10 CreateDisc\cf2 \strokec2 (\cf5 \strokec5 "triangle"\cf2 \strokec2 , \cf12 \strokec12 0.8\cf2 \strokec2 , \cf12 \strokec12 3\cf2 \strokec2 , \cf6 \strokec6 scene\cf2 \strokec2 );\cb1 \
\cb4         \cf6 \strokec6 playDisc\cf2 \strokec2 .\cf6 \strokec6 position\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 Vector3\cf2 \strokec2 (-\cf12 \strokec12 5\cf2 \strokec2 ,-\cf12 \strokec12 4\cf2 \strokec2 ,\cf12 \strokec12 5\cf2 \strokec2 );\cb1 \
\cb4         \cf9 \strokec9 /*\cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb4 \strokec9         var playDiscFreq2 = Mesh.CreateDisc("triangle", 0.8, 3, scene);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         playDiscFreq2.position = new Vector3(5,-4,5);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         */\cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4         \cb1 \
\cb4         \cf9 \strokec9 // hide/show the Inspector\cf2 \cb1 \strokec2 \
\cb4         \cf6 \strokec6 window\cf2 \strokec2 .\cf10 \strokec10 addEventListener\cf2 \strokec2 (\cf5 \strokec5 "keydown"\cf2 \strokec2 , (\cf6 \strokec6 ev\cf2 \strokec2 ) \cf7 \strokec7 =>\cf2 \strokec2  \{\cb1 \
\cb4             \cf9 \strokec9 // Shift+Ctrl+Alt+I\cf2 \cb1 \strokec2 \
\cb4             \cf3 \strokec3 if\cf2 \strokec2  (\cf6 \strokec6 ev\cf2 \strokec2 .\cf6 \strokec6 shiftKey\cf2 \strokec2  && \cf6 \strokec6 ev\cf2 \strokec2 .\cf6 \strokec6 ctrlKey\cf2 \strokec2  && \cf6 \strokec6 ev\cf2 \strokec2 .\cf6 \strokec6 altKey\cf2 \strokec2  && \cf6 \strokec6 ev\cf2 \strokec2 .\cf6 \strokec6 keyCode\cf2 \strokec2  === \cf12 \strokec12 73\cf2 \strokec2 ) \{\cb1 \
\cb4                 \cf3 \strokec3 if\cf2 \strokec2  (\cf6 \strokec6 scene\cf2 \strokec2 .\cf6 \strokec6 debugLayer\cf2 \strokec2 .\cf10 \strokec10 isVisible\cf2 \strokec2 ()) \{\cb1 \
\cb4                     \cf6 \strokec6 scene\cf2 \strokec2 .\cf6 \strokec6 debugLayer\cf2 \strokec2 .\cf10 \strokec10 hide\cf2 \strokec2 ();\cb1 \
\cb4                 \} \cf3 \strokec3 else\cf2 \strokec2  \{\cb1 \
\cb4                     \cf6 \strokec6 scene\cf2 \strokec2 .\cf6 \strokec6 debugLayer\cf2 \strokec2 .\cf10 \strokec10 show\cf2 \strokec2 ();\cb1 \
\cb4                 \}\cb1 \
\cb4             \}\cb1 \
\cb4         \});\cb1 \
\
\cb4         \cf9 \strokec9 /*\cf2 \cb1 \strokec2 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb4 \strokec9         //SSVEP STUFF START\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         // create circle and set location\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         var disc = Mesh.CreateDisc("disc", 1, 0, scene);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         disc.position = new Vector3(0, 0, 0);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         var mat = new StandardMaterial("someMaterial");\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         disc.material = mat;\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         \cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         //scene.beginAnimation(disc, 0, 3, true);\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         function getKeyFrames()\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             const keyFrames = [];\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9             keyFrames.push(\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 frame: 0,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 value: new Color3(0,0,0),\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             \});\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9             keyFrames.push(\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 frame: 3,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 value: new Color3(1,1,1),\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             \});\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9             keyFrames.push(\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 frame: 6,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 value: new Color3(0,0,0),\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             \});\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9             return keyFrames;\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         \}\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         function frameRate15Hz()\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             let frameRate = 30;\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             let keyFrames = getKeyFrames();\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             \cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             const ssvepAnim = new Animation("flashingSSVEP", "material.diffuseColor", frameRate, Animation.ANIMATIONTYPE_COLOR3);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             ssvepAnim.enableBlending = false;\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             ssvepAnim.setKeys(keyFrames);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             disc.animations.push(ssvepAnim);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         \}\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         function frameRate30Hz()\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             let frameRate = 60;\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             let keyFrames = getKeyFrames();\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             \cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             const ssvepAnim = new Animation("flashingSSVEP", "material.diffuseColor", frameRate, Animation.ANIMATIONTYPE_COLOR3);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             ssvepAnim.enableBlending = false;\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             ssvepAnim.setKeys(keyFrames);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             disc.animations.push(ssvepAnim);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         \}\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         // making an event to start/stop the ssvep\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         playDisc.actionManager = new ActionManager(scene);\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         playDisc.actionManager\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             .registerAction(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 new ExecuteCodeAction(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     ActionManager.OnPickTrigger,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     frameRate15Hz,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             .then(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 new PlayAnimationAction(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     ActionManager.NothingTrigger,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     disc,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     0,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     1000,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     true\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             .then(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 new StopAnimationAction(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     \{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                         trigger: ActionManager.OnDoublePickTrigger,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                         parameter: disc\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     \},\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     disc\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             )\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         playDiscFreq2.actionManager = new ActionManager(scene);\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         playDiscFreq2.actionManager\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             .registerAction(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 new ExecuteCodeAction(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     ActionManager.OnPickTrigger,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     frameRate30Hz,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             .then(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 new PlayAnimationAction(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     ActionManager.NothingTrigger,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     disc,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     0,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     1000,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     true\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             .then(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 new StopAnimationAction(\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     \{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                         trigger: ActionManager.OnDoublePickTrigger,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                         parameter: disc\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     \},\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                     disc\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9                 )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             )\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         */\cf2 \cb1 \strokec2 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb4         \cf9 \strokec9 //SSMVEP STUFF START\cf2 \cb1 \strokec2 \
\
\cb4         \cf9 \strokec9 //Making square background, setting position and material\cf2 \cb1 \strokec2 \
\
\cb4         \cf7 \strokec7 const\cf2 \strokec2  \cf11 \strokec11 freq\cf2 \strokec2  = \cf12 \strokec12 11\cf2 \strokec2 ;\cb1 \
\cb4         \cf7 \strokec7 let\cf2 \strokec2  \cf6 \strokec6 fps\cf2 \strokec2  = \cf12 \strokec12 60\cf2 \strokec2 ;\cb1 \
\cb4         \cf7 \strokec7 let\cf2 \strokec2  \cf6 \strokec6 gcd\cf2 \strokec2  = \cf12 \strokec12 0\cf2 \strokec2 ;\cb1 \
\
\cb4         \cf9 \strokec9 //Calculates greatest common denominator \cf2 \cb1 \strokec2 \
\cb4         \cf3 \strokec3 if\cf2 \strokec2 (\cf6 \strokec6 fps\cf2 \strokec2 %(\cf11 \strokec11 freq\cf2 \strokec2 *\cf12 \strokec12 2\cf2 \strokec2 ) != \cf12 \strokec12 0\cf2 \strokec2 )\{\cb1 \
\cb4             \cf3 \strokec3 for\cf2 \strokec2  (\cf7 \strokec7 let\cf2 \strokec2  \cf6 \strokec6 i\cf2 \strokec2  = \cf12 \strokec12 1\cf2 \strokec2 ; \cf6 \strokec6 i\cf2 \strokec2  <= \cf11 \strokec11 freq\cf2 \strokec2 *\cf12 \strokec12 2\cf2 \strokec2  && \cf6 \strokec6 i\cf2 \strokec2  <= \cf6 \strokec6 fps\cf2 \strokec2 ; \cf6 \strokec6 i\cf2 \strokec2 ++) \{\cb1 \
\cb4                 \cf9 \strokec9 // check if is factor of both integers\cf2 \cb1 \strokec2 \
\cb4                 \cf3 \strokec3 if\cf2 \strokec2 ( (\cf11 \strokec11 freq\cf2 \strokec2 *\cf12 \strokec12 2\cf2 \strokec2 ) % \cf6 \strokec6 i\cf2 \strokec2  == \cf12 \strokec12 0\cf2 \strokec2  && \cf6 \strokec6 fps\cf2 \strokec2  % \cf6 \strokec6 i\cf2 \strokec2  == \cf12 \strokec12 0\cf2 \strokec2 ) \{\cb1 \
\cb4                     \cf6 \strokec6 gcd\cf2 \strokec2  = \cf6 \strokec6 i\cf2 \strokec2 ;\cb1 \
\cb4                 \}\cb1 \
\cb4             \}\cb1 \
\cb4             \cb1 \
\cb4             \cf9 \strokec9 //fps becomes the lowest common multiple \cf2 \cb1 \strokec2 \
\cb4             \cf6 \strokec6 fps\cf2 \strokec2  = (\cf11 \strokec11 freq\cf2 \strokec2  * \cf12 \strokec12 2\cf2 \strokec2  * \cf6 \strokec6 fps\cf2 \strokec2 ) / \cf6 \strokec6 gcd\cf2 \strokec2 ;\cb1 \
\cb4         \}\cb1 \
\
\cb4         \cf7 \strokec7 let\cf2 \strokec2  \cf6 \strokec6 secondFrame\cf2 \strokec2  = \cf6 \strokec6 fps\cf2 \strokec2 /(\cf12 \strokec12 2\cf2 \strokec2 *\cf11 \strokec11 freq\cf2 \strokec2 );\cb1 \
\cb4         \cf7 \strokec7 let\cf2 \strokec2  \cf6 \strokec6 thirdFrame\cf2 \strokec2  = \cf6 \strokec6 fps\cf2 \strokec2 /\cf11 \strokec11 freq\cf2 \strokec2 ;\cb1 \
\
\cb4         \cf7 \strokec7 var\cf2 \strokec2  \cf6 \strokec6 squareDisc\cf2 \strokec2  = \cf8 \strokec8 Mesh\cf2 \strokec2 .\cf10 \strokec10 CreateDisc\cf2 \strokec2 (\cf5 \strokec5 "disc"\cf2 \strokec2 , \cf12 \strokec12 1\cf2 \strokec2 , \cf12 \strokec12 0\cf2 \strokec2 , \cf6 \strokec6 scene\cf2 \strokec2 );\cb1 \
\cb4         \cf6 \strokec6 squareDisc\cf2 \strokec2 .\cf6 \strokec6 position\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 Vector3\cf2 \strokec2 (\cf12 \strokec12 0\cf2 \strokec2 , \cf12 \strokec12 0\cf2 \strokec2 , \cf12 \strokec12 0\cf2 \strokec2 );\cb1 \
\
\cb4         \cf9 \strokec9 //var cbTexture = new DynamicTexture("", canvas, scene)\cf2 \cb1 \strokec2 \
\cb4         \cf7 \strokec7 var\cf2 \strokec2  \cf6 \strokec6 mat\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf8 \strokec8 StandardMaterial\cf2 \strokec2 (\cf5 \strokec5 "Checkerboard"\cf2 \strokec2 , \cf6 \strokec6 scene\cf2 \strokec2 );\cb1 \
\
\cb4         \cf6 \strokec6 mat\cf2 \strokec2 .\cf6 \strokec6 alpha\cf2 \strokec2  = \cf12 \strokec12 1\cf2 \strokec2 ;\cb1 \
\
\cb4         \cf6 \strokec6 mat\cf2 \strokec2 .\cf6 \strokec6 diffuseTexture\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf10 \strokec10 Texture\cf2 \strokec2 (\cf5 \strokec5 'https://i.imgur.com/r8MPUrJ.png'\cf2 \strokec2 , \cf6 \strokec6 scene\cf2 \strokec2 );\cb1 \
\cb4         \cf6 \strokec6 squareDisc\cf2 \strokec2 .\cf6 \strokec6 material\cf2 \strokec2  = \cf6 \strokec6 mat\cf2 \strokec2 ;\cb1 \
\cb4         \cb1 \
\cb4         \cf7 \strokec7 const\cf2 \strokec2  \cf11 \strokec11 rotateAnim\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf10 \strokec10 Animation\cf2 \strokec2 (\cf5 \strokec5 "rotateAnim"\cf2 \strokec2 , \cf5 \strokec5 "rotation.z"\cf2 \strokec2 , \cf6 \strokec6 fps\cf2 \strokec2 , \cf6 \strokec6 Animation\cf2 \strokec2 .\cf11 \strokec11 ANIMATIONTYPE_FLOAT\cf2 \strokec2 );\cb1 \
\
\cb4         \cf7 \strokec7 const\cf2 \strokec2  \cf11 \strokec11 rotateFrames\cf2 \strokec2  = [];\cb1 \
\
\cb4         \cf6 \strokec6 rotateFrames\cf2 \strokec2 .\cf10 \strokec10 push\cf2 \strokec2 (\{\cb1 \
\cb4             \cf6 \strokec6 frame:\cf2 \strokec2  \cf12 \strokec12 0\cf2 \strokec2 ,\cb1 \
\cb4             \cf6 \strokec6 value:\cf2 \strokec2  -\cf6 \strokec6 Math\cf2 \strokec2 .\cf11 \strokec11 PI\cf2 \strokec2 /\cf12 \strokec12 4\cf2 \strokec2 ,\cb1 \
\cb4             \cf9 \strokec9 //interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cb4         \});\cb1 \
\cb4         \cf6 \strokec6 rotateFrames\cf2 \strokec2 .\cf10 \strokec10 push\cf2 \strokec2 (\{\cb1 \
\cb4             \cf6 \strokec6 frame:\cf2 \strokec2  \cf6 \strokec6 secondFrame\cf2 \strokec2 ,\cb1 \
\cb4             \cf6 \strokec6 value:\cf2 \strokec2  \cf6 \strokec6 Math\cf2 \strokec2 .\cf11 \strokec11 PI\cf2 \strokec2 /\cf12 \strokec12 4\cf2 \strokec2 ,\cb1 \
\cb4             \cf9 \strokec9 //interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cb4         \});\cb1 \
\cb4         \cf6 \strokec6 rotateFrames\cf2 \strokec2 .\cf10 \strokec10 push\cf2 \strokec2 (\{\cb1 \
\cb4             \cf6 \strokec6 frame:\cf2 \strokec2  \cf6 \strokec6 thirdFrame\cf2 \strokec2 ,\cb1 \
\cb4             \cf6 \strokec6 value:\cf2 \strokec2  -\cf6 \strokec6 Math\cf2 \strokec2 .\cf11 \strokec11 PI\cf2 \strokec2 /\cf12 \strokec12 4\cf2 \strokec2 ,\cb1 \
\cb4             \cf9 \strokec9 //interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cb4         \});\cb1 \
\cb4         \cb1 \
\
\cb4         \cb1 \
\cb4         \cf6 \strokec6 rotateAnim\cf2 \strokec2 .\cf10 \strokec10 setKeys\cf2 \strokec2 (\cf6 \strokec6 rotateFrames\cf2 \strokec2 );\cb1 \
\
\cb4         \cf6 \strokec6 squareDisc\cf2 \strokec2 .\cf6 \strokec6 animations\cf2 \strokec2 .\cf10 \strokec10 push\cf2 \strokec2 (\cf6 \strokec6 rotateAnim\cf2 \strokec2 );\cb1 \
\
\cb4         \cf9 \strokec9 //scene.beginAnimation(squareDisc, 0, 60, true);\cf2 \cb1 \strokec2 \
\
\cb4         \cf6 \strokec6 playDisc\cf2 \strokec2 .\cf6 \strokec6 actionManager\cf2 \strokec2  = \cf7 \strokec7 new\cf2 \strokec2  \cf10 \strokec10 ActionManager\cf2 \strokec2 (\cf6 \strokec6 scene\cf2 \strokec2 );\cb1 \
\
\cb4         \cf6 \strokec6 playDisc\cf2 \strokec2 .\cf6 \strokec6 actionManager\cf2 \cb1 \strokec2 \
\cb4             .\cf10 \strokec10 registerAction\cf2 \strokec2 (\cb1 \
\cb4                 \cf7 \strokec7 new\cf2 \strokec2  \cf10 \strokec10 PlayAnimationAction\cf2 \strokec2 (\cb1 \
\cb4                     \cf6 \strokec6 ActionManager\cf2 \strokec2 .\cf6 \strokec6 OnPickTrigger\cf2 \strokec2 ,\cb1 \
\cb4                     \cf6 \strokec6 squareDisc\cf2 \strokec2 ,\cb1 \
\cb4                     \cf12 \strokec12 0\cf2 \strokec2 ,\cb1 \
\cb4                     \cf12 \strokec12 1000\cf2 \strokec2 ,\cb1 \
\cb4                     \cf7 \strokec7 true\cf2 \cb1 \strokec2 \
\cb4                 )\cb1 \
\cb4             )\cb1 \
\cb4             .\cf10 \strokec10 then\cf2 \strokec2 (\cb1 \
\cb4                 \cf7 \strokec7 new\cf2 \strokec2  \cf10 \strokec10 StopAnimationAction\cf2 \strokec2 (\cb1 \
\cb4                     \{\cb1 \
\cb4                         \cf6 \strokec6 trigger:\cf2 \strokec2  \cf6 \strokec6 ActionManager\cf2 \strokec2 .\cf6 \strokec6 OnDoublePickTrigger\cf2 \strokec2 ,\cb1 \
\cb4                         \cf6 \strokec6 parameter:\cf2 \strokec2  \cf6 \strokec6 squareDisc\cf2 \cb1 \strokec2 \
\cb4                     \},\cb1 \
\cb4                     \cf6 \strokec6 squareDisc\cf2 \cb1 \strokec2 \
\cb4                 )\cb1 \
\cb4             )\cb1 \
\
\cb4         \cf9 \strokec9 /*\cf2 \cb1 \strokec2 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb4 \strokec9         const scaleAnim = new Animation("scaleAnim", "scaling", 60, Animation.ANIMATIONTYPE_VECTOR3);\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         const scaleFrames = [];\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         scaleFrames.push(\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             frame: 0,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             value: new Vector3(1,1,1),\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             //interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         \});\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         scaleFrames.push(\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             frame: 3,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             value: new Vector3(1.2,1.2,1),\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             //interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         \});\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         scaleFrames.push(\{\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             frame: 6,\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             value: new Vector3(1,1,1),\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9             //interpolation: AnimationKeyInterpolation.STEP\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         \});\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         scaleAnim.setKeys(scaleFrames);\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         squareDisc.animations.push(scaleAnim);\cf2 \cb1 \strokec2 \
\
\cf9 \cb4 \strokec9         scene.beginAnimation(squareDisc, 0, 60, true);\cf2 \cb1 \strokec2 \
\cf9 \cb4 \strokec9         */\cf2 \cb1 \strokec2 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb4         \cb1 \
\
\
\
\
\
\
\
\
\
\cb4         \cf9 \strokec9 // run the main render loop\cf2 \cb1 \strokec2 \
\cb4         \cf6 \strokec6 engine\cf2 \strokec2 .\cf10 \strokec10 runRenderLoop\cf2 \strokec2 (() \cf7 \strokec7 =>\cf2 \strokec2  \{\cb1 \
\cb4             \cf6 \strokec6 scene\cf2 \strokec2 .\cf10 \strokec10 render\cf2 \strokec2 ();\cb1 \
\cb4         \});\cb1 \
\cb4     \}\cb1 \
\cb4 \}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb4 \strokec7 new\cf2 \strokec2  \cf10 \strokec10 App\cf2 \strokec2 ();\cb1 \
\
}